country_flags_added <- key_crop_yields %>%
filter(!is.na(Code)) %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup() %>%
full_join(top_crops) %>%
mutate(Top_Country = ifelse(is.na(Crop_Percentile), 0 , 1))
ggplot(country_flags_added,
aes(x = Year,
y = value,
group = Entity)) +
facet_wrap(~Crop) +
geom_line()
ggplot(country_flags_added,
aes(x = Year,
y = value,
group = Entity)) +
facet_wrap(~Crop,
scales = 'free_y') +
geom_line()
country_flags_added
ggplot(country_flags_added,
aes(x = Year,
y = value,
group = Entity)) +
facet_wrap(~Crop,
scales = 'free_y') +
geom_line(color = 'gray',
alpha = 0.6) +
geom_line(data = subset(country_flags_added, Top_Country == 1),
mapping = aes(x = Year,
y = value,
group = Country,
color = Country))
ggplot(country_flags_added,
aes(x = Year,
y = value,
group = Entity)) +
facet_wrap(~Crop,
scales = 'free_y') +
geom_line(color = 'gray',
alpha = 0.6) +
geom_line(data = subset(country_flags_added, Top_Country == 1),
mapping = aes(x = Year,
y = value,
group = Entity,
color = Entity))
country_flags_added
key_crop_yields %>%
filter(!is.na(Code)) %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup() %>%
full_join(top_crops) %>%
mutate(Top_Country = ifelse(is.na(Crop_Percentile), 0 , 1)) %>%
filter(Crop = 'Cocoa beans (tonnes per hectare)')
country_flags_added <- key_crop_yields %>%
filter(!is.na(Code)) %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup() %>%
full_join(top_crops) %>%
mutate(Top_Country = ifelse(is.na(Crop_Percentile), 0 , 1)) %>%
filter(Crop == 'Cocoa beans (tonnes per hectare)')
ggplot(country_flags_added,
aes(x = Year,
y = value,
group = Entity)) +
facet_wrap(~Crop,
scales = 'free_y') +
geom_line(color = 'gray',
alpha = 0.6) +
geom_line(data = subset(country_flags_added, Top_Country == 1),
mapping = aes(x = Year,
y = value,
group = Entity,
color = Entity))
country_flags_added <- key_crop_yields %>%
filter(!is.na(Code)) %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup() %>%
full_join(top_crops) %>%
mutate(Top_Country = ifelse(is.na(Crop_Percentile), 0 , 1)) %>%
filter(Crop == 'Rice (tonnes per hectare)')
ggplot(country_flags_added,
aes(x = Year,
y = value,
group = Entity)) +
facet_wrap(~Crop,
scales = 'free_y') +
geom_line(color = 'gray',
alpha = 0.6) +
geom_line(data = subset(country_flags_added, Top_Country == 1),
mapping = aes(x = Year,
y = value,
group = Entity,
color = Entity))
country_flags_added <- key_crop_yields %>%
filter(!is.na(Code)) %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup() %>%
full_join(top_crops) %>%
mutate(Top_Country = ifelse(is.na(Crop_Percentile), 0 , 1)) %>%
filter(Crop == 'Potatoes (tonnes per hectare)')
ggplot(country_flags_added,
aes(x = Year,
y = value,
group = Entity)) +
facet_wrap(~Crop,
scales = 'free_y') +
geom_line(color = 'gray',
alpha = 0.6) +
geom_line(data = subset(country_flags_added, Top_Country == 1),
mapping = aes(x = Year,
y = value,
group = Entity,
color = Entity))
key_crop_yields %>%
filter(Year == max(Year),
is.na(Code))
key_crop_yields %>%
filter(Year == max(Year),
is.na(Code)) %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
top_crops <- key_crop_yields %>%
filter(Year == max(Year),
is.na(Code)) %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
View(top_crops)
View(top_crops)
View(key_crop_yields)
key_crop_yields %>%
filter(Year == max(Year),
is.na(Code) | Code == 'OWID_WRL') %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
top_crops <- key_crop_yields %>%
filter(Year == max(Year),
is.na(Code) | Code == 'OWID_WRL') %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
View(top_crops)
key_crop_yields %>%
filter(is.na(Code) | Code == 'OWID_WRL') %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
top_crops <- key_crop_yields %>%
filter(is.na(Code) | Code == 'OWID_WRL') %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
unique(top_crops$Entity)
top_crops <- key_crop_yields %>%
filter(Entity %in% c('Africa',
'Asia, Central',
'Caribbean',
'Latin America',
'Eastern Asia',
'Europe',
'European Union',
'Micronesia (region)',
'World',
'Western Asia',
'Southern Asia',
'South Eastern Asia',
'Oceania')) %>%
group_by(Entity,
Code) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
key_crop_yields %>%
filter(Entity %in% c('Africa',
'Asia, Central',
'Caribbean',
'Latin America',
'Eastern Asia',
'Europe',
'European Union',
'Micronesia (region)',
'World',
'Western Asia',
'Southern Asia',
'South Eastern Asia',
'Oceania'))
key_crop_yields %>%
filter(Entity %in% c('Africa',
'Asia, Central',
'Caribbean',
'Latin America',
'Eastern Asia',
'Europe',
'European Union',
'Micronesia (region)',
'World',
'Western Asia',
'Southern Asia',
'South Eastern Asia',
'Oceania')) %>%
group_by(Entity) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
top_crops <- key_crop_yields %>%
filter(Entity %in% c('Africa',
'Asia, Central',
'Caribbean',
'Latin America',
'Eastern Asia',
'Europe',
'European Union',
'Micronesia (region)',
'World',
'Western Asia',
'Southern Asia',
'South Eastern Asia',
'Oceania')) %>%
group_by(Entity) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
ggplot(top_crops,
aes(x = Year,
y = value,
group = Entity)) +
geom_line() +
facet_wrap(~Crop)
ggplot(top_crops,
aes(x = Year,
y = value,
group = Entity,
color = Entity)) +
geom_line() +
facet_wrap(~Crop,
scales = 'free_y')
ggplot(top_crops,
aes(x = Year,
y = value,
group = Entity,
color = Entity)) +
geom_line(size = 1) +
facet_wrap(~Crop,
scales = 'free_y')
top_crops <- key_crop_yields %>%
filter(Entity %in% c('Africa',
'Caribbean',
'Latin America',
'Asia',
'Europe',
'European Union',
'Micronesia (region)',
'World',
'Oceania')) %>%
group_by(Entity) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
ggplot(top_crops,
aes(x = Year,
y = value,
group = Entity,
color = Entity)) +
geom_line(size = 1) +
facet_wrap(~Crop,
scales = 'free_y')
top_crops <- key_crop_yields %>%
filter(Entity %in% c('Africa',
'Caribbean',
'Latin America',
'North America',
'South America',
'Asia',
'Europe',
'European Union',
'Micronesia (region)',
'World',
'Oceania')) %>%
group_by(Entity) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
ggplot(top_crops,
aes(x = Year,
y = value,
group = Entity,
color = Entity)) +
geom_line(size = 1) +
facet_wrap(~Crop,
scales = 'free_y')
top_crops <- key_crop_yields %>%
filter(Entity %in% c('Africa',
'Caribbean',
'Latin America',
'Northern America',
'South America',
'Asia',
'Europe',
'European Union',
'Micronesia (region)',
'World',
'Oceania')) %>%
group_by(Entity) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
ggplot(top_crops,
aes(x = Year,
y = value,
group = Entity,
color = Entity)) +
geom_line(size = 1) +
facet_wrap(~Crop,
scales = 'free_y')
remotes::install_github('coolbutuseless/chipmunkcore')
remotes::install_github('coolbutuseless/chipmunkbasic')
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyverse)
library(tidylog)
key_crop_yields <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/key_crop_yields.csv')
fertilizer <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/cereal_crop_yield_vs_fertilizer_application.csv')
tractors <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/cereal_yields_vs_tractor_inputs_in_agriculture.csv')
land_use <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/land_use_vs_yield_change_in_cereal_production.csv')
arable_land <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/arable_land_pin.csv')
head(key_crop_yields)
head(fertilizer)
head(tractors)
head(land_use)
head(arable_land)
worlddf <- world
# Key Crop Yields Analysis
# What are the top 75% Percentile Countries Among Each Crop Currently?
top_crops <- key_crop_yields %>%
filter(Entity %in% c('Africa',
'Caribbean',
'Latin America',
'Northern America',
'South America',
'Asia',
'Europe',
'European Union',
'Micronesia (region)',
'World',
'Oceania')) %>%
group_by(Entity) %>%
pivot_longer(names_to = 'Crop',
cols = -c('Entity', 'Code', 'Year')) %>%
ungroup()
ggplot(top_crops,
aes(x = Year,
y = value,
group = Entity,
color = Entity)) +
geom_line(size = 1) +
facet_wrap(~Crop,
scales = 'free_y')
library(sf)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(leaflet)
library(cartogram)
library(readr)
world
####  Loading the libraries and data  ####
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyverse)
library(tidylog)
library(sf)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(leaflet)
library(cartogram)
library(readr)
# Key Crop Yields
key_crop_yields <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/key_crop_yields.csv')
# World data frame
worlddf <- world
####  Data Cleaning and Joining ####
head(key_crop_yields)
head(key_crop_yields)
key_crop_yields %>%
filter(is.na(Code))
key_crop_yields %>%
filter(is.na(Code)) %>%
distinct(Entity)
key_crop_yields %>%
filter(is.na(Code) | Entity == 'World') %>%
distinct(Entity)
####  Loading the libraries and data  ####
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyverse)
library(tidylog)
library(sf)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(leaflet)
library(cartogram)
library(readr)
# Key Crop Yields
key_crop_yields <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/key_crop_yields.csv')
# World data frame
worlddf <- world
####  Data Cleaning and Joining ####
head(key_crop_yields)
avoid_entity_names <- key_crop_yields %>%
filter(is.na(Code) | Entity == 'World') %>%
distinct(Entity)
####  Loading the libraries and data  ####
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyverse)
library(tidylog)
library(sf)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(leaflet)
library(cartogram)
library(readr)
# Key Crop Yields
key_crop_yields <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-01/key_crop_yields.csv')
# World data frame
worlddf <- world
####  Data Cleaning and Joining ####
head(key_crop_yields)
avoid_entity_names <- key_crop_yields %>%
filter(is.na(Code) | Entity == 'World') %>%
distinct(Entity)
# long pivot key crop yield df
key_crop_yields %>%
anti_join(avoid_entity_names)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(tidylog)
library(sf)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(leaflet)
library(cartogram)
library(readr)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(tidylog)
library(sf)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(leaflet)
library(cartogram)
library(readr)
####  Loading the libraries and data  ####
library(dplyr)
library(ggplot2)
library(tidyverse)
#library(tidylog)
library(sf)
library(raster)
library(dplyr)
library(spData)
library(tmap)
library(leaflet)
library(cartogram)
library(readr)
